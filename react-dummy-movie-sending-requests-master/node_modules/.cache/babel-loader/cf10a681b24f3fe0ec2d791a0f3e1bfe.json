{"ast":null,"code":"var _jsxFileName = \"/Users/marving/Downloads/react-dummy-movie-sending-requests/src/App.js\";\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function fetchMoviesHandler() {\n    setIsLoading(true); // Using a GET method (per default)\n    // Pass as a string the URL we want to fetch\n\n    fetch(\"https://swapi.dev/api/films\").then(response => {\n      //the response is an object with a bunch of DataTransfer.\n      return response.json(); // response.json() return a promise\n    }).then(data => {\n      // Transforming the data results here because of underscore key pair _\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 45\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, \"loading...\")));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","fetchMoviesHandler","fetch","then","response","json","data","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","length"],"sources":["/Users/marving/Downloads/react-dummy-movie-sending-requests/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function fetchMoviesHandler() {\n    setIsLoading(true);\n    // Using a GET method (per default)\n    // Pass as a string the URL we want to fetch\n    fetch(\"https://swapi.dev/api/films\")\n      .then((response) => {\n        //the response is an object with a bunch of DataTransfer.\n        return response.json();\n        // response.json() return a promise\n      })\n      .then((data) => {\n        // Transforming the data results here because of underscore key pair _\n        const transformedMovies = data.results.map((movieData) => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.release_date,\n          };\n        });\n        setMovies(transformedMovies);\n        setIsLoading(false);\n      });\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {isLoading && <p>loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EACb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;EAEA,SAASO,kBAAT,GAA8B;IAC5BD,YAAY,CAAC,IAAD,CAAZ,CAD4B,CAE5B;IACA;;IACAE,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;MAClB;MACA,OAAOA,QAAQ,CAACC,IAAT,EAAP,CAFkB,CAGlB;IACD,CALH,EAMGF,IANH,CAMSG,IAAD,IAAU;MACd;MACA,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;QACxD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UADT;UAELC,KAAK,EAAEH,SAAS,CAACG,KAFZ;UAGLC,WAAW,EAAEJ,SAAS,CAACK,aAHlB;UAILC,WAAW,EAAEN,SAAS,CAACO;QAJlB,CAAP;MAMD,CAPyB,CAA1B;MAQAnB,SAAS,CAACS,iBAAD,CAAT;MACAP,YAAY,CAAC,KAAD,CAAZ;IACD,CAlBH;EAmBD;;EAED,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEC,kBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACF,SAAD,IAAcF,MAAM,CAACqB,MAAP,GAAgB,CAA9B,iBAAmC,oBAAC,UAAD;IAAY,MAAM,EAAErB,MAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADtC,EAEGE,SAAS,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAFhB,CAJF,CADF;AAWD;;AAED,eAAeH,GAAf"},"metadata":{},"sourceType":"module"}